{"version":3,"sources":["src/index.js"],"names":["myClock","date","Date","year","getFullYear","month","getMonth","hours","getHours","minutes","getMinutes","seconds","getSeconds","document","getElementById","innerHTML","setInterval","loginInput","login","event","keyCode","loginUser","value","console","log","welcome","addEventListener","loginForm","onLoginSubmit","preventDefault","todoInput","submitToDo","newToDo","newToDoObj","text","id","now","toDos","push","paintToDo","saveToDos","li","createElement","span","innerText","btn","deleteToDo","appendChild","toDoList","savedToDos","localStorage","getItem","setItem","JSON","stringify","parsedToDos","parse","forEach","target","parentElement","remove","filter","toDo","parseInt","onGeoOk","position","lat","coords","latitude","lng","longitude","url","myApi","fetch","then","response","json","data","country","querySelector","name","sys","weather","main","description","onGeoError","navigator","geolocation","getCurrentPosition"],"mappings":"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","file":"src.71c47d40.js","sourceRoot":"..","sourcesContent":["import \"./styles.css\";\n\n/* * * * 시계 * * * */\nmyClock();\nsetInterval(myClock, 1000);\n\nfunction myClock() {\n  const date = new Date();\n  const year = date.getFullYear();\n  const month = date.getMonth() + 1;\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n  const seconds = date.getSeconds();\n  document.getElementById(\n    \"clock\"\n  ).innerHTML = `${year}년 ${month}월 ${hours}시 ${minutes}분 ${seconds}초`;\n}\n\n/*\nmyWallpaper();\n\nfunction myWallpaper() {\n  // https://unsplash.com/documentation#get-a-random-photo\n}\n*/\n\n/* * * * 로그인 * * * */\nconst loginInput = document.getElementById(\"login-input\");\nloginInput.addEventListener(\"keydown\", login);\n\nfunction login(event) {\n  if (event.keyCode == 13) {\n    const loginUser = loginInput.value;\n    const date = new Date();\n    const hours = date.getHours();\n    console.log(hours);\n    let welcome = \"\";\n    if ((hours >= 6) & (hours < 12)) {\n      welcome = \"Good Morning\";\n    } else if ((hours) => 12 & (hours < 18)) {\n      welcome = \"Good Afternoon\";\n    } else if ((hours) => 18 & (hours < 24)) {\n      welcome = \"Good Evening\";\n    } else if ((hours) => 0 & (hours < 6)) {\n      welcome = \"Have a nice Dream\";\n    }\n    // document.getElementById(\"login-form\").style = \"visibility: hidden\";\n    document.getElementById(\n      \"login-form\"\n    ).innerHTML = `${welcome}, ${loginUser}`;\n  }\n}\n\n// 폼 디폴트이벤트 방지\nconst loginForm = document.getElementById(\"login-form\");\nloginForm.addEventListener(\"submit\", onLoginSubmit);\n\nfunction onLoginSubmit(event) {\n  event.preventDefault();\n}\n\n/* * * * 투두리스트 * * * */\n// 입력\nconst todoInput = document.getElementById(\"todo-input\");\ntodoInput.addEventListener(\"keydown\", submitToDo);\n\nfunction submitToDo(event) {\n  if (event.keyCode == 13) {\n    const newToDo = todoInput.value;\n    todoInput.value = \"\";\n    const newToDoObj = {\n      text: newToDo,\n      id: Date.now()\n    };\n    toDos.push(newToDoObj);\n    paintToDo(newToDoObj);\n    saveToDos();\n  }\n}\n\nfunction paintToDo(newToDoObj) {\n  const li = document.createElement(\"li\");\n  li.id = newToDoObj.id;\n  const span = document.createElement(\"span\");\n  span.innerText = newToDoObj.text;\n  const btn = document.createElement(\"button\");\n  btn.innerText = \"✔\";\n  btn.addEventListener(\"click\", deleteToDo);\n  li.appendChild(span);\n  li.appendChild(btn);\n  toDoList.appendChild(li);\n}\n\n// 저장\nconst toDoList = document.getElementById(\"todo-list\");\nlet toDos = [];\nconst savedToDos = localStorage.getItem(\"todos\");\n\nfunction saveToDos() {\n  localStorage.setItem(\"todos\", JSON.stringify(toDos));\n}\n\nif (savedToDos) {\n  const parsedToDos = JSON.parse(savedToDos);\n  toDos = parsedToDos;\n  // forEach 함수는 paintToDo 함수를 parsedToDos의 배열의 요소마다 실행한다.\n  parsedToDos.forEach(paintToDo);\n}\n\n// 삭제\nfunction deleteToDo(event) {\n  const li = event.target.parentElement;\n  li.remove();\n  toDos = toDos.filter((toDo) => toDo.id !== parseInt(li.id));\n  saveToDos();\n}\n\n/* * * * 날씨, 위치 * * * */\nfunction onGeoOk(position) {\n  const lat = position.coords.latitude;\n  const lng = position.coords.longitude;\n  // https://openweathermap.org/api\n  const myApi = \"4b70fc63e8f3a09a8c86bdcae8a06beb\";\n  const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lng}&appid=${myApi}`;\n  // console.log(url);\n  fetch(url)\n    .then((response) => response.json())\n    .then((data) => {\n      const country = document.querySelector(\"#weather span:first-child\");\n      const name = document.querySelector(\"#weather span:last-child\");\n      country.innerText = `${data.sys.country} ${data.name}`;\n      name.innerText = `${data.weather[0].main} ${data.weather[0].description}`;\n      // 일출, 일몰 시간 이용해서 welcome 메시지를 바꿔줘도 좋을 것 같음\n    });\n}\n\nfunction onGeoError() {\n  // console(\"Can't find you. No weather for you.\");\n}\nnavigator.geolocation.getCurrentPosition(onGeoOk, onGeoError);\n"]}